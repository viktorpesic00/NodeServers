{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport backgroundImage from \"./assets/bglogin.png\";\nimport user from \"./assets/login-icons/ic_username.png\";\nimport password from \"./assets/login-icons/ic_password.png\";\nimport banner from \"./assets/banner.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n\n    _this.submitForm = function () {};\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateValue\",\n    value: function updateValue(text, field) {\n      if (field == \"email\") {\n        this.setState({\n          email: text\n        });\n      } else if (field == \"password\") {\n        this.setState({\n          password: text\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n        style: styles.container,\n        children: [_jsx(StatusBar, {\n          style: \"light\"\n        }), _jsx(ImageBackground, {\n          source: backgroundImage,\n          style: styles.bgimage,\n          children: _jsxs(View, {\n            style: styles.loginForm,\n            children: [_jsx(Text, {\n              style: styles.heading,\n              children: \"DOBRO DO\\u0160LI\"\n            }), _jsxs(View, {\n              style: styles.section,\n              children: [_jsx(Image, {\n                source: user,\n                style: styles.inputImage\n              }), _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Korisni\\u010Dko ime\",\n                numberOfLines: 1,\n                underlineColorAndroid: \"transparent\",\n                placeholderTextColor: \"white\",\n                value: email,\n                onChangeText: function onChangeText(text) {\n                  return _this2.updateValue(text, \"email\");\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.section,\n              children: [_jsx(Image, {\n                source: password,\n                style: styles.inputImage\n              }), _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Lozinka\",\n                underlineColorAndroid: \"transparent\",\n                placeholderTextColor: \"white\",\n                secureTextEntry: true,\n                value: this.state.password,\n                onChangeText: function onChangeText(text) {\n                  return _this2.updateValue(text, \"password\");\n                }\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: styles.loginButton,\n              onPress: this.submitForm,\n              children: _jsx(Text, {\n                style: {\n                  color: \"red\"\n                },\n                children: \"PRIJAVITE SE\"\n              })\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bgimage: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  loginForm: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"white\",\n    marginBottom: 30,\n    marginTop: 200\n  },\n  section: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    borderWidth: 1,\n    color: \"white\",\n    borderColor: \"white\",\n    height: 50,\n    width: \"80%\",\n    borderRadius: 5,\n    margin: 10\n  },\n  inputImage: {\n    padding: 10,\n    margin: 5,\n    height: 30,\n    width: 30,\n    resizeMode: \"stretch\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    flex: 1,\n    color: \"white\",\n    marginLeft: 10\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    borderRadius: 100,\n    paddingTop: 18,\n    paddingBottom: 18,\n    paddingStart: 90,\n    paddingEnd: 90,\n    marginTop: 30\n  },\n  banner: {\n    position: \"absolute\",\n    top: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/Nikola/Desktop/MetApp/App.js"],"names":["StatusBar","React","Component","useEffect","useState","backgroundImage","user","password","banner","App","submitForm","state","email","text","field","setState","Platform","OS","styles","container","bgimage","loginForm","heading","section","inputImage","textInput","updateValue","loginButton","color","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","resizeMode","fontSize","fontWeight","marginBottom","marginTop","flexDirection","borderWidth","borderColor","borderRadius","margin","padding","marginLeft","paddingTop","paddingBottom","paddingStart","paddingEnd","position","top"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  SafeAreaView,\n  Alert,\n  KeyboardAvoidingView,\n  ScrollView,\n} from \"react-native\";\nimport React, { Component, useEffect, useState } from \"react\";\n\nimport backgroundImage from \"./assets/bglogin.png\";\nimport user from \"./assets/login-icons/ic_username.png\";\nimport password from \"./assets/login-icons/ic_password.png\";\nimport banner from \"./assets/banner.png\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  updateValue(text, field) {\n    if (field == \"email\") {\n      this.setState({ email: text });\n    } else if (field == \"password\") {\n      this.setState({ password: text });\n    }\n  }\n\n  submitForm = () => {\n    // fetch(\"https://webhook.site/e338abb6-7b0e-4563-8db9-584d183a97d4\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"text/html\" },\n    //   body: \"email=nikola.knezevic.4054@metropolitan.ac.rs&password=N1k0l@369\",\n    // }).then(() => {\n    //   alert(\"Uspesno ulogovan!\");\n    // });\n  };\n\n  render() {\n    return (\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n      >\n        <StatusBar style=\"light\" />\n        <ImageBackground source={backgroundImage} style={styles.bgimage}>\n          <View style={styles.loginForm}>\n            {/* <View style={styles.banner}>\n            <Image\n              source={banner}\n              style={{\n                width: 290,\n                height: 290,\n                resizeMode: \"contain\",\n              }}\n            />\n          </View> */}\n            <Text style={styles.heading}>DOBRO DOŠLI</Text>\n\n            <View style={styles.section}>\n              <Image source={user} style={styles.inputImage} />\n              <TextInput\n                style={styles.textInput}\n                placeholder=\"Korisničko ime\"\n                numberOfLines={1}\n                underlineColorAndroid={\"transparent\"}\n                placeholderTextColor=\"white\"\n                value={email}\n                onChangeText={(text) => this.updateValue(text, \"email\")}\n              />\n            </View>\n            <View style={styles.section}>\n              <Image source={password} style={styles.inputImage} />\n              <TextInput\n                style={styles.textInput}\n                placeholder=\"Lozinka\"\n                underlineColorAndroid={\"transparent\"}\n                placeholderTextColor=\"white\"\n                secureTextEntry\n                value={this.state.password}\n                onChangeText={(text) => this.updateValue(text, \"password\")}\n              />\n            </View>\n\n            <TouchableOpacity\n              style={styles.loginButton}\n              onPress={this.submitForm}\n            >\n              <Text style={{ color: \"red\" }}>PRIJAVITE SE</Text>\n            </TouchableOpacity>\n          </View>\n        </ImageBackground>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  bgimage: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n  },\n  loginForm: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"white\",\n    marginBottom: 30,\n    marginTop: 200,\n  },\n  section: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    borderWidth: 1,\n    color: \"white\",\n    borderColor: \"white\",\n    height: 50,\n    width: \"80%\",\n    borderRadius: 5,\n    margin: 10,\n  },\n  inputImage: {\n    padding: 10,\n    margin: 5,\n    height: 30,\n    width: 30,\n    resizeMode: \"stretch\",\n    alignItems: \"center\",\n  },\n  textInput: {\n    flex: 1,\n    color: \"white\",\n    marginLeft: 10,\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    borderRadius: 100,\n    paddingTop: 18,\n    paddingBottom: 18,\n    paddingStart: 90,\n    paddingEnd: 90,\n    marginTop: 30,\n  },\n  banner: {\n    position: \"absolute\",\n    top: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}